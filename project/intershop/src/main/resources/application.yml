spring:
  r2dbc:
    url: r2dbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}

  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    encoding: UTF-8

  web:
    locale: ru_RU
    locale-resolver: fixed
    resources:
      static-locations:
        - classpath:/static/
        - file:${UPLOAD_IMAGE_DIR}

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

  flyway:
    enabled: true
    baseline-on-migrate: true
    sql-migration-suffixes: .sql

  cache:
    type: redis

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}

  security:
    oauth2:
      client:
        provider:
          keycloak:
            authorization-uri: http://${KC_HOSTNAME}:${KC_PORT}/realms/${OAUTH2_REALM}/protocol/openid-connect/auth
            token-uri: http://${KC_HOSTNAME}:${KC_PORT}/realms/${OAUTH2_REALM}/protocol/openid-connect/token
            user-info-uri: http://${KC_HOSTNAME}:${KC_PORT}/realms/${OAUTH2_REALM}/protocol/openid-connect/userinfo
            user-name-attribute: sub
            jwk-set-uri: http://${KC_HOSTNAME}:${KC_PORT}/realms/${OAUTH2_REALM}/protocol/openid-connect/certs
            issuer-uri: http://${KC_HOSTNAME}:${KC_PORT}/realms/${OAUTH2_REALM}
        registration:
          keycloak:
            authorizationGrantType: authorization_code
            provider: keycloak
            client-id: ${OAUTH2_INTERSHOP_CLIENT_ID}
            client-secret: ${OAUTH2_INTERSHOP_CLIENT_SECRET}
            redirect-uri: '{baseUrl}/{action}/oauth2/code/{registrationId}'
            scope: openid, profile, email
          keycloak-pay-client:
            client-id: ${OAUTH2_PAY_CLIENT_ID}
            client-secret: ${OAUTH2_PAY_CLIENT_SECRET}
            authorization-grant-type: client_credentials
            scope: openid
            provider: keycloak

service:
  pay:
    host: ${SERVICE_PAY_HOST}
    port: ${SERVICE_PAY_PORT}
